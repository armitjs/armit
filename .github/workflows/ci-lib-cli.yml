name: CI-lib-cli

on:
  push:
    branches:
      - main
      - major
      - minor
      - dev
    # Only consider those paths to trigger the action
    paths:
      - 'packages/**'
      - 'package.json'
      - '*.lock'
      - '.yarnrc.yml'
      - 'tsconfig.base.json'
      - '.prettier*'
      - '.github/**'

  pull_request:
    branches:
      - main
      - major
      - minor
      - dev
    types:
      - opened
      - synchronize
      - reopened
    # Only consider those paths to trigger the action
    paths:
      - 'packages/**'
      - 'package.json'
      - '*.lock'
      - '.yarnrc.yml'
      - 'tsconfig.base.json'
      - '.prettier*'
      - '.github/**'
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ðŸ“¥ Monorepo install
        uses: ./.github/actions/yarn-nm-install

      - name: Typecheck
        working-directory: packages/cli
        run: |
          yarn typecheck

      - name: Linter
        working-directory: packages/cli
        run: |
          yarn lint

      - name: Unit tests
        working-directory: packages/cli
        run: |
          yarn test-unit

      - name: Build lib-cli
        working-directory: packages/cli
        run: |
          yarn build
  commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: ðŸ“¥ Monorepo install
        uses: ./.github/actions/yarn-nm-install

      # - name: Unit test coverage
      #   working-directory: packages/cli
      #   run: |
      #     yarn test-coverage

      # - name: Publish github pages
      #   run: |
      #     git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      #     git config --global user.name 'tianyingchun'
      #     git config --global user.email 'tianyingchun@outlook.com'
      #     git fetch
      #     git checkout gb_pages
      #     mkdir -p ./gb_pages
      #     cp -R ./packages/cli/coverage/* ./gb_pages/coverage/cli
      #     git add gb_pages/*
      #     git commit -m "Update page"
      #     git push
